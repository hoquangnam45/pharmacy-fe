on:
  - push
  - workflow_dispatch
env:
  MVN_CACHE_FOLDER: lib/
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - uses: actions/cache@v3
        with:
          path: node_modules/
          key: ${{ hashFiles('package-lock.json') }}
      - run: npm install
  test-and-build:
    runs-on: ubuntu-latest
    outputs:
      PROJECT_VERSION: ${{ steps.export-env.outputs.PROJECT_VERSION }}
      ARTIFACT_NAME: ${{ steps.export-env.outputs.ARTIFACT_NAME }}
    needs: setup
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - uses: actions/cache@v3
        with:
          path: node_modules/
          key: ${{ hashFiles('package-lock.json') }}
      - run: npm run lint
      - run: npm run test
      - run: npm run build
      - id: export-env
        run: |
          export PROJECT_VERSION=$(jq -r .version package.json)
          export ARTIFACT_NAME=$(jq -r .name package.json)-$PROJECT_VERSION
          echo PROJECT_VERSION=$PROJECT_VERSION | tee -a $GITHUB_OUTPUT $GITHUB_ENV
          echo ARTIFACT_NAME=$ARTIFACT_NAME | tee -a $GITHUB_OUTPUT $GITHUB_ENV
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: build/
          retention-days: 1
  deploy-to-s3:
    runs-on: ubuntu-latest
    needs: test-and-build
    strategy:
      matrix:
        environment: [dev, prod]
    environment: ${{ matrix.environment }}
    env:
      PROJECT_VERSION: ${{ needs.test-and-build.outputs.PROJECT_VERSION }}
      ARTIFACT_NAME: ${{ needs.test-and-build.outputs.ARTIFACT_NAME }}
      ENVIRONMENT: ${{ matrix.environment }}
      DEPLOYMENT_TYPE: S3
      STACK_ID: ${{ matrix.environment }}S3DeploymentStack
      ARTIFACT_PATH: ./build
    steps:
      - uses: actions/checkout@v3
        with:
          repository: hoquangnam45/pharmacy-infra
      - uses: ./actions/setup-deployment
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - uses: actions/cache@v3
        with:
          path: ${{ env.MVN_CACHE_FOLDER }}
          key: ${{ hashFiles('pom.xml') }}
      - uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: build/
      - run: npx cdk deploy --app "./mvnw -Dmaven.repo.local=$MVN_CACHE_FOLDER -e -q compile exec:java -U" --require-approval never
